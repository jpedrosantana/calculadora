[{"C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\index.js":"1","C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\main\\Calculator.jsx":"2","C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\components\\Button.jsx":"3","C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\components\\Display.jsx":"4","C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\reportWebVitals.js":"5"},{"size":543,"mtime":1609966222411,"results":"6","hashOfConfig":"7"},{"size":4131,"mtime":1609872414229,"results":"8","hashOfConfig":"7"},{"size":702,"mtime":1609872414185,"results":"9","hashOfConfig":"7"},{"size":126,"mtime":1609872414195,"results":"10","hashOfConfig":"7"},{"size":375,"mtime":1609872414232,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"136eqdk",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\index.js",[],"C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\main\\Calculator.jsx",["26"],"import React, {Component} from 'react'\r\nimport './Calculator.css'\r\n\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display'\r\n\r\nconst initialState = { //cria fora da classe pois a clearMemory zera os valores.\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0, 0], //array para armazenar os valores da operação\r\n    current: 0 //indica qual dos índices do array está sendo manipulado\r\n}\r\n\r\nexport default class Calculator extends Component {\r\n    state = {...initialState} //criou um clone do array\r\n\r\n    clearMemory(){\r\n        this.setState({...initialState})\r\n    }\r\n\r\n    setOperation(operation){\r\n        if(this.state.current === 0){\r\n            //Muda o índice do array após a inserção da operação, e da Clear no display quando o segundo valor é inserido \r\n            this.setState({operation, current: 1, clearDisplay: true})\r\n        } else {\r\n            const equals = operation === '='\r\n            const currentOperation = this.state.operation //Operação já setada\r\n\r\n            const values = [...this.state.values]\r\n\r\n            try{\r\n                values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`) //executa a operação e armazena no valor na posição 0 e o valor de índice 1 será zerado\r\n\r\n            }catch{\r\n                values[0] = this.state.values[0]\r\n            }\r\n            values[1] = 0\r\n\r\n            this.setState({\r\n                displayValue: values[0],\r\n                operation: equals ? null : operation,\r\n                current: equals ? 0 : 1,\r\n                clearDisplay: !equals, //Se for diferente de equals, limpa o display\r\n                values\r\n            })\r\n        }\r\n    }\r\n\r\n    addDigit(n){\r\n        if (n === '.' && this.state.displayValue.includes(\".\")){\r\n            return //regra para evitar dois pontos na operação\r\n        }\r\n\r\n        const clearDisplay = this.state.displayValue === '0' //impede que haja 0 à esquerda do algarismo\r\n            || this.state.clearDisplay\r\n        \r\n        const currentValue = clearDisplay ? '' : this.state.displayValue\r\n\r\n        const displayValue = currentValue + n\r\n\r\n        this.setState({displayValue, clearDisplay: false})\r\n\r\n        if (n !== '.'){ //se um valor numérico for inserido\r\n            const i = this.state.current //inserindo o índice do array na variável i\r\n            const newValue = parseFloat(displayValue)\r\n            const values = [...this.state.values] //array clonado\r\n            values[i] = newValue\r\n\r\n            this.setState({values})\r\n        }\r\n    }\r\n\r\n    render(){ //precisa ter return\r\n        const addDigit = n => this.addDigit(n) //O this representa o objeto atual\r\n        const setOperation = op => this.setOperation(op) //As funções garantem o this que eu quero associar\r\n\r\n        return ( //className é como referenciamos classes no jsx, ao contrário do HTML, mas o significado é o mesmo.\r\n            <div className=\"calculator\">\r\n                <Display value={this.state.displayValue} />\r\n                <Button label=\"AC\" click={() => this.clearMemory()} triple/>\r\n                <Button label=\"/\" click={setOperation} operation/>\r\n                <Button label=\"7\" click={addDigit}/>\r\n                <Button label=\"8\" click={addDigit}/>\r\n                <Button label=\"9\" click={addDigit}/>\r\n                <Button label=\"*\" click={setOperation} operation/>\r\n                <Button label=\"4\" click={addDigit}/>\r\n                <Button label=\"5\" click={addDigit}/>\r\n                <Button label=\"6\" click={addDigit}/>\r\n                <Button label=\"-\" click={setOperation} operation/>\r\n                <Button label=\"1\" click={addDigit}/>\r\n                <Button label=\"2\" click={addDigit}/>\r\n                <Button label=\"3\" click={addDigit}/>\r\n                <Button label=\"+\" click={setOperation} operation/>\r\n                <Button label=\"0\" click={addDigit} double/>\r\n                <Button label=\".\" click={addDigit}/>\r\n                <Button label=\"=\" click={setOperation} operation/>\r\n            </div>\r\n        )\r\n    }\r\n}",["27","28"],"C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\components\\Button.jsx",["29"],"import React from 'react'\r\nimport './Button.css'\r\n\r\n//Componentes sem estado (funcionais) são mais fáceis de rabalhar\r\n\r\n//Primeira classe sempre será definida, as outras devem conter propriedades indicando se elas vão ser aplicadas ou não\r\n\r\n//Dentro de uma template string pode-se usar javascript puro\r\nexport default props =>{\r\n    let classes = 'button '\r\n    classes += props.operation ? 'operation' : ''\r\n    classes += props.double ? 'double' : ''\r\n    classes += props.triple ? 'triple' : ''\r\n\r\n    return (\r\n        <button \r\n            onClick={e => props.click && props.click(props.label)}\r\n            className={classes}>\r\n            {props.label}\r\n        </button>\r\n    )\r\n}\r\n    ","C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\components\\Display.jsx",["30"],"import React from 'react'\r\nimport './Display.css'\r\n\r\nexport default props=> \r\n    <div className='display'>{props.value}</div>","C:\\Users\\jpger\\OneDrive\\Documentos\\Curso\\Web_Moderno_Javascript\\Secao_21_React\\calculadora\\src\\reportWebVitals.js",[],{"ruleId":"31","severity":1,"message":"32","line":33,"column":29,"nodeType":"33","messageId":"34","endLine":33,"endColumn":33},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":9,"column":1,"nodeType":"41","endLine":22,"endColumn":2},{"ruleId":"39","severity":1,"message":"40","line":4,"column":1,"nodeType":"41","endLine":5,"endColumn":49},"no-eval","eval can be harmful.","CallExpression","unexpected","no-native-reassign",["42"],"no-negated-in-lhs",["43"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]